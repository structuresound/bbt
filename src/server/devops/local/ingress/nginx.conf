
error_log /dev/null;

worker_processes  1;

events {
    worker_connections  2048;
}

http {
    access_log off;

    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    default_type       application/octet-stream;
    include /etc/nginx/mime.types;

    # all non-ssl requests redirect to ssl
    server {
        listen         80;
        location / {
            return              301 https://$host$request_uri;
        }
    }
    # SSL + main redirect to all services
    server {
        listen              443 ssl;
        server_name         chroma-ssl;
        ssl_certificate     tls/fullchain.pem;
        ssl_certificate_key tls/privkey.pem;

        # As recommended by https://weakdh.org/sysadmin.html to deploy a strong Diffie-Hellman key.
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        add_header          Strict-Transport-Security max-age=15768000;
        ssl_prefer_server_ciphers on;
        # ssl_dhparam /dhparams.pem;

        # OCSP Stapling
        # fetch OCSP records from URL in ssl_certificate and cache them
        ssl_stapling on;
        ssl_stapling_verify on;

        # Set upload to sensible value as defaults to 1M if not present
        client_max_body_size 10M;

        location / {
          proxy_pass          http://10.200.10.1:3000;
          proxy_redirect      off;
          proxy_buffering     off;
        }

        location /front/ {
          proxy_pass          http://10.200.10.1:3001/;
          proxy_redirect      off;
          proxy_buffering     off;
        }

        location /front/sockjs-node/ {
          proxy_pass          http://10.200.10.1:3001/sockjs-node/;

          # WebSocket specific
          proxy_http_version 1.1;
          proxy_set_header    Upgrade           $http_upgrade;
          proxy_set_header    Connection        $connection_upgrade;
        }

        location /theme/ {
          proxy_pass          http://10.200.10.1:3002/;
          proxy_redirect      off;
          proxy_buffering     off;
        }

        location /mailer/ {
          proxy_pass          http://10.200.10.1:4002/;
          proxy_redirect      off;
          proxy_buffering     off;
        }
    }
}

stream {
  server {
    listen 5280;
    proxy_connect_timeout 1s;
    proxy_timeout 3s;
    proxy_pass 10.200.10.1:5200;
  }
}
